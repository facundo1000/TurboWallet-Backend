name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/turbowallet-backend

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      test-results: ${{ steps.test.outcome }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Verify Maven installation
        run: mvn --version

      - name: Run tests
        id: test
        run: |
          cd ./TurboWallet/TurboWallet-Back/alkywallet/pom.xml
          mvn clean test -B -V \
            -Dmaven.test.failure.ignore=false \
            -Dsurefire.useFile=true \
            -Dsurefire.printSummary=true

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maven Tests
          path: '**/target/surefire-reports/TEST-*.xml'
          reporter: java-junit
          fail-on-error: false
          max-annotations: 10

      - name: Generate test coverage
        if: success() || failure()
        run: mvn jacoco:report

      - name: Upload coverage to Codecov
        if: success() || failure()
        uses: codecov/codecov-action@v3
        with:
          file: ./target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Cache test results
        if: success()
        uses: actions/cache@v3
        with:
          path: target/
          key: test-results-${{ github.sha }}

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    if: always() && needs.test.result != 'cancelled'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build-and-push:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push' && 
      needs.test.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore test cache
        uses: actions/cache@v3
        with:
          path: target/
          key: test-results-${{ github.sha }}

      - name: Build application
        run: |
          if [ -f "target/turbowallet-backend-*.jar" ]; then
            echo "Using cached build artifacts"
          else
            mvn clean package -DskipTests -B -V
          fi

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

  notify:
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send comprehensive notification
        if: always()
        run: |
          # Determinar el estado general
          if [[ "${{ needs.test.result }}" == "success" && "${{ needs.build-and-push.result }}" == "success" ]]; then
            STATUS="success"
            EMOJI="‚úÖ"
            MESSAGE="Pipeline completado exitosamente"
          elif [[ "${{ needs.test.result }}" == "failure" ]]; then
            STATUS="failure"
            EMOJI="‚ùå"
            MESSAGE="Tests fallaron"
          elif [[ "${{ needs.build-and-push.result }}" == "failure" ]]; then
            STATUS="failure"
            EMOJI="üí•"
            MESSAGE="Build/Deploy fall√≥"
          else
            STATUS="cancelled"
            EMOJI="‚ö†Ô∏è"
            MESSAGE="Pipeline cancelado"
          fi

          # Enviar notificaci√≥n a Slack
          curl -X POST "${{ secrets.SLACK_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "'"$EMOJI"' TurboWallet Backend Pipeline",
              "attachments": [{
                "color": "'"$([ "$STATUS" = "success" ] && echo "good" || echo "danger")"'",
                "fields": [
                  {"title": "Estado", "value": "'"$MESSAGE"'", "short": true},
                  {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                  {"title": "Actor", "value": "${{ github.actor }}", "short": true},
                  {"title": "Commit", "value": "<${{ github.event.head_commit.url }}|${{ github.sha }}>", "short": true}
                ]
              }]
            }'